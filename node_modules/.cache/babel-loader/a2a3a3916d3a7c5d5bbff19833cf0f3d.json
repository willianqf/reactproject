{"ast":null,"code":"var _jsxFileName = \"D:\\\\Meus Documentos\\\\Desktop\\\\Projetos\\\\projetoreact\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// SEMPRE IMPORTAR A BIBLIOTECA DO REACT //\nimport React, { useState } from \"react\"; //////////////////////////////////////////a\n////// IMPORTAR ARQUIVOS PARA HTML ///////\n\nimport './App.css';\nimport AddTask from \"./components/AddTask\";\nimport Tasks from \"./components/Tasks\";\nimport Header from \"./components/Header\";\nimport TaskDetails from \"./components/TaskDetails\"; /////////////////////////////////////////\n///////// BIBLIOTECA UUIC ///////////////\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { Route } from \"react-router-dom\"; /////////////////////////////////////////\n//// BIBLIOTECAS DO REACT ROUTER DOM ////\n\nimport { BrowserRouter as Router, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //let mensagem = 'Hello Word! PEOPLES SCRIPT'\n\n  /* VARIAVEL STATE = const ['nome da variavel', 'função que usará'] = useState('valor inicial') */\n\n  /* const [mensagem, setMensagem] = useState('Hello Word') */\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    title: 'Estudar programação',\n    completed: false\n  }, {\n    id: '2',\n    title: 'Ler Livros',\n    completed: true\n  }]);\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id == taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTask = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n    }];\n    setTasks(newTask);\n  };\n\n  const handleTaskDeletion = taskId => {\n    const newTasks = tasks.filter(task => task.id != taskId);\n    setTasks(newTasks);\n  };\n  /*\n    <>\n    <div className=\"container\">{mensagem}</div>\n    <button onClick={() => setMensagem(\"Você clicou no botão\")}>Teste</button>\n    </>\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/ini\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AddTask, {\n                handleTaskAddition: handleTaskAddition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n                tasks: tasks,\n                handleTaskClick: handleTaskClick,\n                handleTaskDeletion: handleTaskDeletion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"bNJ/XLXTBsvcYl9UkB2THIm6dM4=\");\n\n_c = App;\nexport default App;\n\nfunction coments(params) {\n  /*\n  <Router>\n  <div className=\"container\">\n    <Header />\n    <Route path=\"/\" exact render={() => (\n      <>\n        <AddTask handleTaskAddition={handleTaskAddition} />\n        <Tasks tasks={tasks} handleTaskClick={handleTaskClick} handleTaskDeletion={handleTaskDeletion} />\n      \n        </>\n    )} \n    />\n  </div>\n  </Router>\n  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTask","Tasks","Header","TaskDetails","v4","uuidv4","Route","BrowserRouter","Router","Routes","App","tasks","setTasks","id","title","completed","handleTaskClick","taskId","newTasks","map","task","handleTaskAddition","taskTitle","newTask","handleTaskDeletion","filter","coments","params"],"sources":["D:/Meus Documentos/Desktop/Projetos/projetoreact/src/App.jsx"],"sourcesContent":["// SEMPRE IMPORTAR A BIBLIOTECA DO REACT //\nimport React, { useState } from \"react\";\n//////////////////////////////////////////a\n////// IMPORTAR ARQUIVOS PARA HTML ///////\nimport './App.css';\nimport AddTask from \"./components/AddTask\";\nimport Tasks from \"./components/Tasks\";\nimport Header from \"./components/Header\";\nimport TaskDetails from \"./components/TaskDetails\";\n/////////////////////////////////////////\n///////// BIBLIOTECA UUIC ///////////////\nimport { v4 as uuidv4 } from 'uuid';\nimport { Route } from \"react-router-dom\";\n\n/////////////////////////////////////////\n//// BIBLIOTECAS DO REACT ROUTER DOM ////\nimport { BrowserRouter as Router, Routes} from \"react-router-dom\";\n\nconst App = () =>\n{\n  //let mensagem = 'Hello Word! PEOPLES SCRIPT'\n  /* VARIAVEL STATE = const ['nome da variavel', 'função que usará'] = useState('valor inicial') */\n  /* const [mensagem, setMensagem] = useState('Hello Word') */\n  const [tasks, setTasks] = useState(\n    [\n      {\n        id:'1',\n        title:'Estudar programação',\n        completed: false\n      },\n      {\n        id:'2',\n        title:'Ler Livros',\n        completed: true\n      }\n    ]\n  )\n\n  const handleTaskClick = (taskId) =>\n  {\n    const newTasks = tasks.map(task =>{\n      if(task.id == taskId) return{...task, completed: !task.completed}\n      return task;\n    })\n\n    setTasks(newTasks)\n  }\n  const handleTaskAddition = (taskTitle) =>\n  {\n    const newTask = [...tasks, \n      {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n      }\n    ];\n\n    setTasks(newTask);\n  }\n\n  const handleTaskDeletion = (taskId) =>\n  {\n    const newTasks = tasks.filter(task => task.id != taskId)\n    setTasks(newTasks)\n  }\n  /*\n    <>\n    <div className=\"container\">{mensagem}</div>\n    <button onClick={() => setMensagem(\"Você clicou no botão\")}>Teste</button>\n    </>\n  */\n \n  return(\n    <>\n      <div className=\"container\">\n        <Header/>\n        <Router>\n          <Routes>\n            <Route path='/ini' element={\n            <>\n              <AddTask handleTaskAddition={handleTaskAddition} />\n              <Tasks tasks={tasks} handleTaskClick={handleTaskClick} handleTaskDeletion={handleTaskDeletion} />\n            </>\n            }       \n            />\n          </Routes>\n        </Router>\n\n      </div>\n    </>\n  )\n\n}\n\nexport default App;\n\nfunction coments(params) {\n      /*\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <Route path=\"/\" exact render={() => (\n          <>\n            <AddTask handleTaskAddition={handleTaskAddition} />\n            <Tasks tasks={tasks} handleTaskClick={handleTaskClick} handleTaskDeletion={handleTaskDeletion} />\n          \n            </>\n        )} \n        />\n      </div>\n    </Router>\n    */\n}"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;AACA;;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,QAA+C,kBAA/C;;;;AAEA,MAAMC,GAAG,GAAG,MACZ;EAAA;;EACE;;EACA;;EACA;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAChC,CACE;IACEc,EAAE,EAAC,GADL;IAEEC,KAAK,EAAC,qBAFR;IAGEC,SAAS,EAAE;EAHb,CADF,EAME;IACEF,EAAE,EAAC,GADL;IAEEC,KAAK,EAAC,YAFR;IAGEC,SAAS,EAAE;EAHb,CANF,CADgC,CAAlC;;EAeA,MAAMC,eAAe,GAAIC,MAAD,IACxB;IACE,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAG;MAChC,IAAGA,IAAI,CAACP,EAAL,IAAWI,MAAd,EAAsB,OAAM,EAAC,GAAGG,IAAJ;QAAUL,SAAS,EAAE,CAACK,IAAI,CAACL;MAA3B,CAAN;MACtB,OAAOK,IAAP;IACD,CAHgB,CAAjB;IAKAR,QAAQ,CAACM,QAAD,CAAR;EACD,CARD;;EASA,MAAMG,kBAAkB,GAAIC,SAAD,IAC3B;IACE,MAAMC,OAAO,GAAG,CAAC,GAAGZ,KAAJ,EACd;MACAG,KAAK,EAAEQ,SADP;MAEAT,EAAE,EAAER,MAAM,EAFV;MAGAU,SAAS,EAAE;IAHX,CADc,CAAhB;IAQAH,QAAQ,CAACW,OAAD,CAAR;EACD,CAXD;;EAaA,MAAMC,kBAAkB,GAAIP,MAAD,IAC3B;IACE,MAAMC,QAAQ,GAAGP,KAAK,CAACc,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACP,EAAL,IAAWI,MAAhC,CAAjB;IACAL,QAAQ,CAACM,QAAD,CAAR;EACD,CAJD;EAKA;AACF;AACA;AACA;AACA;AACA;;;EAEE,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA,uBACE,QAAC,MAAD;UAAA,uBACE,QAAC,KAAD;YAAO,IAAI,EAAC,MAAZ;YAAmB,OAAO,eAC1B;cAAA,wBACE,QAAC,OAAD;gBAAS,kBAAkB,EAAEG;cAA7B;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,KAAD;gBAAO,KAAK,EAAEV,KAAd;gBAAqB,eAAe,EAAEK,eAAtC;gBAAuD,kBAAkB,EAAEQ;cAA3E;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;UADA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAoBD,CA1ED;;GAAMd,G;;KAAAA,G;AA4EN,eAAeA,GAAf;;AAEA,SAASgB,OAAT,CAAiBC,MAAjB,EAAyB;EACnB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC"},"metadata":{},"sourceType":"module"}